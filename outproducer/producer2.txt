program->declaration-list 
declaration-list->declaration declaration-list-1 
declaration->type-specifier ID declaration-1 
type-specifier->int 
ID->max 
declaration-1->( params ) compound-stmt 
params->int ID param-1 param-list-1 
ID->x 
param-1->empty 
param-list-1->, param param-list-1 
param->type-specifier ID param-1 
type-specifier->int 
ID->y 
param-1->empty 
param-list-1->, param param-list-1 
param->type-specifier ID param-1 
type-specifier->int 
ID->z 
param-1->empty 
param-list-1->empty 
compound-stmt->{ local-declarations statement-list } 
local-declarations->local-declarations-1 
local-declarations-1->var-declaration local-declarations-1 
var-declaration->type-specifier ID var-declaration-1 
type-specifier->int 
ID->result 
var-declaration-1->; 
local-declarations-1->empty 
statement-list->statement-list-1 
statement-list-1->statement statement-list-1 
statement->selection-stmt 
selection-stmt->if ( expression ) statement selection-stmt-1 
expression->ID expression-1 
ID->x 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->relop additive-expression 
relop->> 
additive-expression->term additive-expression-1 
term->factor term-1 
factor->ID factor-1 
ID->y 
factor-1->var-1 
var-1->empty 
term-1->empty 
additive-expression-1->empty 
statement->compound-stmt 
compound-stmt->{ local-declarations statement-list } 
local-declarations->local-declarations-1 
local-declarations-1->empty 
statement-list->statement-list-1 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->result 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->x 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->statement statement-list-1 
statement->selection-stmt 
selection-stmt->if ( expression ) statement selection-stmt-1 
expression->ID expression-1 
ID->z 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->relop additive-expression 
relop->> 
additive-expression->term additive-expression-1 
term->factor term-1 
factor->ID factor-1 
ID->result 
factor-1->var-1 
var-1->empty 
term-1->empty 
additive-expression-1->empty 
statement->compound-stmt 
compound-stmt->{ local-declarations statement-list } 
local-declarations->local-declarations-1 
local-declarations-1->empty 
statement-list->statement-list-1 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->result 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->z 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->empty 
selection-stmt-1->empty 
statement-list-1->empty 
selection-stmt-1->else statement 
statement->compound-stmt 
compound-stmt->{ local-declarations statement-list } 
local-declarations->local-declarations-1 
local-declarations-1->empty 
statement-list->statement-list-1 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->result 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->y 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->statement statement-list-1 
statement->selection-stmt 
selection-stmt->if ( expression ) statement selection-stmt-1 
expression->ID expression-1 
ID->z 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->relop additive-expression 
relop->> 
additive-expression->term additive-expression-1 
term->factor term-1 
factor->ID factor-1 
ID->result 
factor-1->var-1 
var-1->empty 
term-1->empty 
additive-expression-1->empty 
statement->compound-stmt 
compound-stmt->{ local-declarations statement-list } 
local-declarations->local-declarations-1 
local-declarations-1->empty 
statement-list->statement-list-1 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->result 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->z 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->empty 
selection-stmt-1->empty 
statement-list-1->empty 
statement-list-1->statement statement-list-1 
statement->return-stmt 
return-stmt->return return-stmt-1 
return-stmt-1->expression ; 
expression->ID expression-1 
ID->result 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->empty 
declaration-list-1->declaration declaration-list-1 
declaration->type-specifier ID declaration-1 
type-specifier->void 
ID->main 
declaration-1->( params ) compound-stmt 
params->void params-1 
params-1->empty 
compound-stmt->{ local-declarations statement-list } 
local-declarations->local-declarations-1 
local-declarations-1->var-declaration local-declarations-1 
var-declaration->type-specifier ID var-declaration-1 
type-specifier->int 
ID->a 
var-declaration-1->; 
local-declarations-1->var-declaration local-declarations-1 
var-declaration->type-specifier ID var-declaration-1 
type-specifier->int 
ID->b 
var-declaration-1->; 
local-declarations-1->var-declaration local-declarations-1 
var-declaration->type-specifier ID var-declaration-1 
type-specifier->int 
ID->c 
var-declaration-1->; 
local-declarations-1->empty 
statement-list->statement-list-1 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->a 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->input 
expression-1->( args ) term-1 additive-expression-1 simple-expression-1 
args->empty 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->b 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->input 
expression-1->( args ) term-1 additive-expression-1 simple-expression-1 
args->empty 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->c 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->= expression 
expression->ID expression-1 
ID->input 
expression-1->( args ) term-1 additive-expression-1 simple-expression-1 
args->empty 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->statement statement-list-1 
statement->expression-stmt 
expression-stmt->expression ; 
expression->ID expression-1 
ID->output 
expression-1->( args ) term-1 additive-expression-1 simple-expression-1 
args->arg-list 
arg-list->expression arg-list-1 
expression->ID expression-1 
ID->max 
expression-1->( args ) term-1 additive-expression-1 simple-expression-1 
args->arg-list 
arg-list->expression arg-list-1 
expression->ID expression-1 
ID->a 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
arg-list-1->, expression arg-list-1 
expression->ID expression-1 
ID->b 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
arg-list-1->, expression arg-list-1 
expression->ID expression-1 
ID->c 
expression-1->var-1 expression-2 
var-1->empty 
expression-2->term-1 additive-expression-1 simple-expression-1 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
arg-list-1->empty 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
arg-list-1->empty 
term-1->empty 
additive-expression-1->empty 
simple-expression-1->empty 
statement-list-1->empty 
declaration-list-1->empty 
FINISHED: OK!
